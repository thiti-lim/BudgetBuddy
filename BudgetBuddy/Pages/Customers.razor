@page "/customers"
@using BudgetBuddy.Data.DomainModels
@using BudgetBuddy.Repositories.Interfaces
@using BudgetBuddy.ViewModels
@inject ICustomerRepository repo
@inject StateContainer state


<MudContainer Class="py-8 px-12">
    <MudText Typo="Typo.h6" Class="mb-4">Customers</MudText>
    @if (CustomersList is null)
    {
        <div>...Loading</div>
    }
    else
    {
        <EditForm Class="d-block" Model="@NewCustomer" OnValidSubmit="InsertCustomer">
            <DataAnnotationsValidator/>
            <MudGrid Class="mb-2" Justify="Justify.FlexStart">
                <MudItem class="d-flex flex-column justify-center">
                        <MudText>Add Customer</MudText>
                </MudItem>
                <MudItem>
                    <MudTextField Variant="Variant.Filled" Margin="Margin.Dense" Label="Customer name" @bind-Value="NewCustomer.CustomerName" For="@(() => NewCustomer.CustomerName)" />
                </MudItem>
                <MudItem Class="d-flex flex-column justify-center">
                    <MudButton ButtonType="ButtonType.Submit" Size="Size.Large" Variant="Variant.Filled" Color="Color.Primary">Register</MudButton>
                </MudItem>
            </MudGrid>
        </EditForm>
        <MudTable Items="@CustomersList">
            <HeaderContent>
                <MudTh>User Id</MudTh>
                <MudTh>Customer Name</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="User Id">@context.UserId</MudTd>
                <MudTd DataLabel="Customer Name">@context.CustomerName</MudTd>
            </RowTemplate>
        </MudTable>

    }
</MudContainer>
@code {
    private IEnumerable<Customer> CustomersList { get; set; }
    private CustomerViewModel NewCustomer = new CustomerViewModel();
    protected override async Task OnInitializedAsync()
    {
        CustomersList = await repo.GetCustomers();

    }

    private async Task InsertCustomer() 
    { 
        await repo.InsertCustomer(NewCustomer);
        CustomersList = await repo.GetCustomers();
        NewCustomer = new CustomerViewModel();
    }
}
